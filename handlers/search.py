import osimport timeimport requestsimport youtube_dlfrom pyrogram import filters, Client, enumsfrom youtube_search import YoutubeSearchfrom pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup@Client.on_message(filters.command(['status']))async def online(_, message):	await message.reply(f"–ë–æ—Ç –æ–Ω–ª–∞–π–Ω.\n\n\n",	                    disable_web_page_preview=True)@Client.on_message(filters.command(['start']))async def start(_, message):	await message.reply("–ü–æ–µ—Ö–∞–ª–∏!")@Client.on_message(filters.command(['about']))async def about(_, message):	await message.reply(		"üéµÔ∏è–ë–æ—Ç: <i>Youtube to MP3</i>\nüïµÔ∏è‚Äç‚ôÇÔ∏è </b>–ê–¥–º–∏–Ω</b> : [ls500pymaster](https://t.me/alexexalex)\nüêç <b>–Ø–∑—ã–∫</b> : <i>Python 3</i>\n")@Client.on_message(filters.command("song"))def song(_, message):	query = "".join(" " + str(i) for i in message.command[1:]).partition("&")	m = message.reply('üîé –ù–∞—á–∏–Ω–∞—é –ø–æ–∏—Å–∫ ...')	ydl_opts = {"format": "bestaudio[ext=m4a]",	            "cachedir": False,	            "nocheckcertificate": True,	            " ignoreerrors": True,	            }	try:		results = []		count = 0		while len(results) == 0 and count < 6:			if count > 0:				time.sleep(1)			results = YoutubeSearch(query[0], max_results=1).to_dict()			count += 1		try:			link = f"https://youtube.com{results[0]['url_suffix']}"			title = results[0]["title"]			thumbnail = results[0]["thumbnails"][0]			duration = results[0]["duration"]			views = results[0]["views"]			thumb_name = f"thumb{id(message)}.jpg"			thumb = requests.get(thumbnail, allow_redirects=True)			open(thumb_name, "wb").write(thumb.content)		except Exception as e:			print(e)			m.edit("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –°—Å—ã–ª–∫–∞ —Ç–æ—á–Ω–æ –Ω–µ –∫—Ä–∏–≤–∞—è?")			return	except Exception as e:		m.edit(			"–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫..."		)		print(str(e))		return	m.edit("‚è¨ –ó–∞–≥—Ä—É–∂–∞—é...")	try:		with youtube_dl.YoutubeDL(ydl_opts) as ydl:			ydl.cache.remove()			info_dict = ydl.extract_info(link, download=False)			audio_file = ydl.prepare_filename(info_dict)			ydl.process_info(info_dict)		result_info = f"üéß –¢—Ä–µ–∫: [{title[:35]}]({link})\n‚è≥ –í—Ä–µ–º—è: {duration}\n‚û°Ô∏è –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {views}\nü§ò –°–ø–∞—Ä—Å–∏–ª: {message.from_user.mention()}\n"		secmul, dur, dur_arr = 1, 0, duration.split(":")		for i in range(len(dur_arr) - 1, -1, -1):			dur += int(dur_arr[i]) * secmul			secmul *= 60		parse_mode = enums.ParseMode.HTML		message.reply_audio(audio_file, caption=result_info, parse_mode=parse_mode, quote=False, title=title, duration=dur, thumb=thumb_name)		m.delete()	except Exception as e:		m.edit('Fail! Exception...')		print(e)	try:		os.remove(audio_file)		os.remove(thumb_name)	except Exception as e:		print(e)